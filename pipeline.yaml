# TED talk and YouTube file merging
# The YouTube file is from George, but we hand-added columns
# The TED talk file is from https://data.world/owentemple/ted-talks-complete-list

# Fix the raw TED talks file from data.world - this will give us an
# ASCII-compatible file encoding in UTF-8 with local line endings
# (instead of iso-8851-1 with Mac line endings)
fix-ted:
    command: ./clean.py -i ted_talks_raw.csv -e iso-8859-1 -o ted_talks.csv
    delOnFail: true
    inputs:
        - clean.py
        - common.py
        - ted_talks_raw.csv
    outputs:
        - ted_talks.csv

# Clean the raw YouTube file as well
fix-yt:
    command: ./clean.py -i yt_ted_raw.csv -e utf-8 -o yt_ted_clean.csv
    delOnFail: true
    inputs:
        - clean.py
        - common.py
        - yt_ted_raw.csv
    outputs:
        - yt_ted_clean.csv

# Fix columns (and use the ted_talks.csv file for xref)
fmt-yt:
    command: "./yt_recol.py < yt_ted_clean.csv > yt_ted.csv"
    delOnFail: true
    direct: true
    inputs:
        - yt_recol.py
        - common.py
        - yt_ted_clean.csv
        - ted_talks.csv
    outputs:
        - yt_ted.csv

# Now create a "joined" file with information from both
join-both:
    command: "./join-ted.py --ted ted_talks.csv --yt yt_ted.csv > ted_joined.csv"
    delOnFail: true
    direct: true
    inputs:
        - join-ted.py
        - common.py
        - manual_map.csv
        - ted_talks.csv
        - yt_ted.csv
    outputs:
        - ted_joined.csv

# Create a DB for examinging data
make-db:
    command: "./tosqlite.py --out ted.db < ted_joined.csv"
    delOnFail: true
    direct: true
    inputs:
        - tosqlite.py
        - common.py
        - matching_speakers.sql
        - ted_joined.csv
    outputs:
        - ted.db

# Run some checks to make sure everything is OK
checks:
    command: "./checks.py < ted_joined.csv 2>&1 | tee checks.log"
    delOnFail: true
    direct: true
    inputs:
        - checks.py
        - common.py
        - ted_joined.csv
    outputs:
        - checks.log

# Get all transcript HTML files and write to ./transcripts
# NOTE: must be explicitly called from command line AND it skips previously
#       retrieved files
get-transcripts:
    command: ./get_transcripts.py --dir ./transcripts < ted_joined.csv 2>&1 | tee transcripts/get.log
    delOnFail: false
    direct: true
    explicit: true
    inputs:
        - get_transcripts.py
        - common.py
        - ted_joined.csv
    outputs:
        - transcripts/get.log
        - transcripts/get-completed
    clean:
        - transcripts/*.html

# Translate all the transcript HTML files retrieved by get-transcripts above
# NOTE: not explicit, but you might need to delete transcripts/xlate.log to
#       get this step to run without explicitly calling it
xlate-transcripts:
    command: ./xlate_transcripts.py --dir ./transcripts 2>&1 | tee transcripts/xlate.log
    delOnFail: false
    direct: true
    inputs:
        - xlate_transcripts.py
        - common.py
        - transcripts/*.html
        - transcripts/get-completed
    outputs:
        - transcripts/xlate.log
    clean:
        - transcripts/*.txt

zip-transcripts:
    command: "zip -v -j transcripts.zip ted_joined.csv transcripts/*.txt"
    delOnFail: false
    direct: false
    inputs:
        - transcripts/*.html
        - transcripts/*.txt
        - transcripts/get-completed
        - transcripts/xlate.log
        - ted_joined.csv
    outputs:
        - transcripts.zip
